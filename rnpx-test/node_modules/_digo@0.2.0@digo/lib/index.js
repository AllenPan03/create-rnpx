"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
if (typeof global.digo === "object") {
    module.exports = global.digo;
    __export = require = function () { };
}
else {
    global.digo = module.exports;
    __export = (module) => {
        for (const key in module) {
            if (!exports.hasOwnProperty(key)) {
                if (typeof module[key] === "function") {
                    exports[key] = module[key];
                }
                else {
                    Object.defineProperty(exports, key, {
                        get() { return module[key]; },
                        set(value) { return module[key] = value; }
                    });
                }
            }
        }
        if (module.__esModule && "default" in module) {
            delete exports.default;
        }
    };
}
__export(require("./utility/lang"));
__export(require("./utility/encode"));
__export(require("./utility/crypto"));
__export(require("./utility/path"));
__export(require("./utility/url"));
__export(require("./utility/fs"));
__export(require("./utility/fsWatcher"));
__export(require("./utility/matcher"));
__export(require("./utility/glob"));
__export(require("./utility/queue"));
__export(require("./utility/asyncQueue"));
__export(require("./utility/log"));
__export(require("./utility/statusBar"));
__export(require("./utility/sourceMap"));
__export(require("./utility/location"));
__export(require("./utility/require"));
__export(require("./utility/commandLine"));
__export(require("./builder/events"));
__export(require("./builder/logging"));
__export(require("./builder/progress"));
__export(require("./builder/async"));
__export(require("./builder/plugin"));
__export(require("./builder/exec"));
__export(require("./builder/file"));
__export(require("./builder/writer"));
__export(require("./builder/fileList"));
__export(require("./builder/src"));
__export(require("./builder/watch"));
__export(require("./builder/server"));
__export(require("./builder/init"));
__export(require("./builder/run"));
__export(require("./builder/config"));
