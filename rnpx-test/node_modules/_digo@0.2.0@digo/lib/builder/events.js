"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const events_1 = require("events");
/**
 * 全局事件处理器。
 */
exports.events = new events_1.EventEmitter();
/**
 * 绑定一个事件。
 * @param event 要绑定的事件名。
 * @param listener 要绑定的事件监听器。
 */
function on(event, listener) {
    exports.events.addListener(event, listener);
}
exports.on = on;
/**
 * 解绑一个或多个事件。
 * @param event 要解绑的事件名。如果不传递则解绑所有事件。
 * @param listener 要解绑的事件监听器。如果不传递则解绑所有监听器。
 */
function off(event, listener) {
    if (listener) {
        exports.events.removeListener(event, listener);
    }
    else if (event) {
        exports.events.removeAllListeners(event);
    }
    else {
        for (const event of exports.events.eventNames()) {
            exports.events.removeAllListeners(event);
        }
    }
}
exports.off = off;
/**
 * 触发一个事件。
 * @param event 要触发的事件名。
 * @param args 传递给监听器的参数列表。
 * @return 如果事件被成功处理则返回 true，否则返回 false。
 */
function emit(event, ...args) {
    return exports.events.emit(event, ...args);
}
exports.emit = emit;
