"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const require_1 = require("../utility/require");
const logging_1 = require("./logging");
const progress_1 = require("./progress");
/**
 * 所有已载入的插件对象。
 */
const plugins = { __proto__: null };
/**
 * 载入指定的插件。
 * @param name 要载入的插件名。
 * @return 返回插件导出对象。
 */
function plugin(name) {
    const loaded = plugins[name];
    if (loaded) {
        return loaded;
    }
    const task = progress_1.begin("Loading plugin: {bright:plugin}", { plugin: name });
    let path = require_1.resolveRequirePath(name);
    if (!path) {
        try {
            path = require.resolve(name);
        }
        catch (e) {
            progress_1.end(task);
            logging_1.fatal(/^[\.\/\\]|^\w+\:/.test(name) ? "Cannot find plugin '{bright:plugin}'." : "Cannot find plugin '{bright:plugin}'. Run 'npm install {plugin}' to install locally.", { plugin: name });
            return null;
        }
    }
    try {
        return plugins[name] = require(path);
    }
    finally {
        progress_1.end(task);
    }
}
exports.plugin = plugin;
