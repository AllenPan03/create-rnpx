/// <reference types="node" />
/**
 * 将指定的缓存对象转为字符串。
 * @param value 要处理的缓存对象。
 * @param encoding 转换的编码。
 * @return 返回处理后的字符串。BOM 字符会被自动删除。
 * @see https://en.wikipedia.org/wiki/Byte_order_mark
 */
export declare function bufferToString(value: Buffer, encoding?: string): string;
/**
 * 将指定的字符串转为缓存对象。
 * @param value 要处理的字符串。
 * @param encoding 转换的编码。
 * @return 返回处理后的缓存对象。
 */
export declare function stringToBuffer(value: string, encoding?: string): Buffer;
/**
 * 计算指定数据的 Base64 值。
 * @param data 要处理的字符串或缓存对象。
 * @return 返回结果字符串。
 * @example base64("A") // "QQ=="
 */
export declare function base64(data: string | Buffer): string;
/**
 * 计算指定数据的 Base64 编码地址。
 * @param mimeType 数据的 MIME 类型。
 * @param data 要处理的字符串或缓存对象。
 * @return 返回结果字符串。
 * @example base64Uri("text/javascript", "A") // "data:text/javascript;base64,QQ=="
 */
export declare function base64Uri(mimeType: string, data: string | Buffer): string;
