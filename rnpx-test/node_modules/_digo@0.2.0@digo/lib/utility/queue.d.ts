/**
 * 表示一个队列。
 */
export declare class Queue<T> implements Iterable<T> {
    /**
     * 存储当前队列的最后一项。
     */
    private _last?;
    /**
     * 判断当前队列是否为空。
     */
    readonly empty: boolean;
    /**
     * 获取队列顶部的值。
     */
    readonly top: T;
    /**
     * 获取当前队列的长度。
     */
    readonly length: number;
    /**
     * 获取当前队列的迭代器。
     */
    [Symbol.iterator](): Iterator<T>;
    /**
     * 将指定的项添加到队列末尾。
     * @param item 要添加的项。
     */
    enqueue(item: T): void;
    /**
     * 取出队首的项。
     * @return 返回队首的项。如果队列为空则返回 undefined。
     */
    dequeue(): T;
    /**
     * 获取当前队列的等价数组。
     */
    toArray(): T[];
    /**
     * 获取当前队列的等价字符串。
     */
    toString(): string;
    /**
     * 自定义当前对象在调试时的显示文案。
     */
    private inspect;
}
export default Queue;
