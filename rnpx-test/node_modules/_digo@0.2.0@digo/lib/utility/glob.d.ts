import { Stats, WalkOptions } from "./fs";
import { Matcher, Pattern } from "./matcher";
/**
 * 搜索指定通配符匹配的文件。
 * @param pattern 要搜索的模式或匹配器。
 * @param options 相关的选项。
 * @return 如果是同步模式则返回所有文件列表。
 */
export declare function glob(pattern: Pattern, options: GlobOptions & {
    end(files: string[]): void;
}): void;
/**
 * 搜索指定通配符匹配的文件。
 * @param pattern 要搜索的模式或匹配器。
 * @param options 相关的选项。
 * @return 如果是同步模式则返回所有文件列表。
 */
export declare function glob(pattern: Pattern, options?: GlobOptions): string[];
export default glob;
/**
 * 表示搜索通配符的选项。
 */
export interface GlobOptions extends WalkOptions {
    /**
     * 搜索的根路径。
     */
    cwd?: string;
    /**
     * 全局匹配器。如果设置了全局匹配器，则返回当前匹配器和全局匹配器的交集。
     */
    globalMatcher?: Matcher;
    /**
     * 当忽略一个文件或文件夹时执行。
     * @param path 当前相关的路径。
     * @param stats 当前文件的属性。
     * @param global 如果为 true 则表示被全局匹配器忽略。
     */
    ignored?(path: string, stats: Stats, global: boolean): void;
}
